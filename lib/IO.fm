type IO <A: Type> {
  end(value: A),
  ask(query: String, param: String, then: (response: String) IO(A)),
}

IO.bind<A: Type, B: Type>(a: IO(A), f: A -> IO(B)): IO(B)
  case a {
    end: f(a.value),
    ask: IO.ask<B>(a.query, a.param, (x) IO.bind<A,B>(a.then(x), f)),
  }

IO.get_line: IO(String)
  IO.ask<String>("get_line", "", (line)
  IO.end<String>(line))

IO.get_file(name: String): IO(String)
  IO.ask<String>("get_file", name, (file)
  IO.end<String>(file))

IO.get_args: IO(String)
  IO.ask<String>("get_args", "", (line)
  IO.end<String>(line))

IO.monad: Monad(IO)
  Monad.new<IO>(IO.bind, IO.end)

IO.print(text: String): IO(Unit)
  IO.ask<Unit>("print", text, (skip)
  IO.end<Unit>(Unit.new))

IO.prompt(text: String): IO(String)
  IO.ask<String>("print", text, (skip)
  IO.ask<String>("get_line", "", (line)
  IO.end<String>(line)))

